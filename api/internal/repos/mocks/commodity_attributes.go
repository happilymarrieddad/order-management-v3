// Code generated by MockGen. DO NOT EDIT.
// Source: ./commodity_attributes.go
//
// Generated by this command:
//
//	mockgen -source=./commodity_attributes.go -destination=./mocks/commodity_attributes.go -package=mock_repos CommodityAttributesRepo
//

// Package mock_repos is a generated GoMock package.
package mock_repos

import (
	context "context"
	reflect "reflect"

	repos "github.com/happilymarrieddad/order-management-v3/api/internal/repos"
	types "github.com/happilymarrieddad/order-management-v3/api/types"
	gomock "go.uber.org/mock/gomock"
	xorm "xorm.io/xorm"
)

// MockCommodityAttributesRepo is a mock of CommodityAttributesRepo interface.
type MockCommodityAttributesRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCommodityAttributesRepoMockRecorder
	isgomock struct{}
}

// MockCommodityAttributesRepoMockRecorder is the mock recorder for MockCommodityAttributesRepo.
type MockCommodityAttributesRepoMockRecorder struct {
	mock *MockCommodityAttributesRepo
}

// NewMockCommodityAttributesRepo creates a new mock instance.
func NewMockCommodityAttributesRepo(ctrl *gomock.Controller) *MockCommodityAttributesRepo {
	mock := &MockCommodityAttributesRepo{ctrl: ctrl}
	mock.recorder = &MockCommodityAttributesRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommodityAttributesRepo) EXPECT() *MockCommodityAttributesRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCommodityAttributesRepo) Create(ctx context.Context, ca *types.CommodityAttribute) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, ca)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCommodityAttributesRepoMockRecorder) Create(ctx, ca any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).Create), ctx, ca)
}

// CreateTx mocks base method.
func (m *MockCommodityAttributesRepo) CreateTx(ctx context.Context, tx *xorm.Session, ca *types.CommodityAttribute) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTx", ctx, tx, ca)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTx indicates an expected call of CreateTx.
func (mr *MockCommodityAttributesRepoMockRecorder) CreateTx(ctx, tx, ca any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTx", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).CreateTx), ctx, tx, ca)
}

// Find mocks base method.
func (m *MockCommodityAttributesRepo) Find(ctx context.Context, opts *repos.CommodityAttributeFindOpts) ([]*types.CommodityAttribute, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", ctx, opts)
	ret0, _ := ret[0].([]*types.CommodityAttribute)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Find indicates an expected call of Find.
func (mr *MockCommodityAttributesRepoMockRecorder) Find(ctx, opts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).Find), ctx, opts)
}

// Get mocks base method.
func (m *MockCommodityAttributesRepo) Get(ctx context.Context, id int64) (*types.CommodityAttribute, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*types.CommodityAttribute)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockCommodityAttributesRepoMockRecorder) Get(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).Get), ctx, id)
}

// Update mocks base method.
func (m *MockCommodityAttributesRepo) Update(ctx context.Context, ca *types.CommodityAttribute) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, ca)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockCommodityAttributesRepoMockRecorder) Update(ctx, ca any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).Update), ctx, ca)
}

// UpdateTx mocks base method.
func (m *MockCommodityAttributesRepo) UpdateTx(ctx context.Context, tx *xorm.Session, ca *types.CommodityAttribute) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTx", ctx, tx, ca)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTx indicates an expected call of UpdateTx.
func (mr *MockCommodityAttributesRepoMockRecorder) UpdateTx(ctx, tx, ca any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTx", reflect.TypeOf((*MockCommodityAttributesRepo)(nil).UpdateTx), ctx, tx, ca)
}
